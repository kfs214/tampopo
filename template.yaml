AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  tampopo

  This AWS Lambda function fetches weather forecasts from the OpenWeatherMap API, calculates the total snowfall, formats a message, and sends it to a specified LINE user using the LINE Messaging API.

Globals:
  Function:
    Timeout: 3
    Tracing: Active
    LoggingConfig:
      LogFormat: JSON
    Environment:
      Variables:
        TZ: "Asia/Tokyo"

Resources:
  WeatherNotifierFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: weather-notifier/
      Handler: app.lambdaHandler
      Runtime: nodejs22.x
      Architectures:
        - x86_64
      Environment:
        Variables:
          LINE_ACCESS_TOKEN: your_line_access_token
          WEATHER_LAT: your_weather_lat
          WEATHER_LON: your_weather_lon
          WEATHER_API_KEY: your_api_key
          LINE_TO: your_line_to
      Events:
        WeatherNotifierCron:
          Type: Schedule
          Properties:
            Schedule: cron(15 15 * * ? *)
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: es2020
        Sourcemap: true
        EntryPoints:
          - app.ts

  ApplicationResourceGroup:
    Type: AWS::ResourceGroups::Group
    Properties:
      Name:
        Fn::Sub: ApplicationInsights-SAM-${AWS::StackName}
      ResourceQuery:
        Type: CLOUDFORMATION_STACK_1_0
  ApplicationInsightsMonitoring:
    Type: AWS::ApplicationInsights::Application
    Properties:
      ResourceGroupName:
        Ref: ApplicationResourceGroup
      AutoConfigurationEnabled: 'true'

Outputs:
  WeatherNotifierFunction:
    Description: Weather Notifier Lambda Function ARN
    Value: !GetAtt WeatherNotifierFunction.Arn
  WeatherNotifierFunctionIamRole:
    Description: Implicit IAM Role created for Weather Notifier function
    Value: !GetAtt WeatherNotifierFunctionRole.Arn
